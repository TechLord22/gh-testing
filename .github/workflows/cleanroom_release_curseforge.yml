name: Cleanroom Release to Curseforge

on: 
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # - name: Set up JDK 8
      #   uses: actions/setup-java@v2
      #   with:
      #     java-version: '8'
      #     distribution: 'adopt'

      # - name: Use Cached Gradle Packages
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle.properties*') }}
      #     restore-keys: ${{ runner.os }}-gradle-

      # - name: Build with Gradle
      #   run: |
      #     chmod +x gradlew
      #     ./gradlew build

      - name: Get Mod Version
        id: getversion
        run: echo ::set-output name=version::$(sed -n 's/^modVersion = \(.*\)/\1/p' < gradle.properties*)

      - name: Create Release Notes
        id: getchangelog
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = await github.request(`POST /repos/${{ github.repository }}/releases/generate-notes`, {
              tag_name: "v${{ steps.getversion.outputs.version }}",
              generate_release_notes: true
            })
            console.log(result)

      - name: Format Release Notes
        run: |
          echo ::set-output name=version::$(
          grep -Po '"data":.*?[^\\]",' ${{ github.workspace }}-CHANGELOG-RAW.json < ${{ github.workspace }}-CHANGELOG-FORMATTED.txt &&
          sed -n 's/^/'/\n/' +\(.*\)/\1/p' < ${{ github.workspace }}-CHANGELOG-FORMATTED.txt)

      - name: Create CurseForge Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.getversion.outputs.version }}
          files: build/libs/*.jar
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          generate_release_notes: true
